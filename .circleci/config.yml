version: 2.1

commands:
  checkout_and_install:
    description: Check out the repo and install the node dependencies
    steps:
      - checkout
      - restore_cache:
          name: Load node_modules from the cache if they haven't changed
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            - v1-npm-deps-
      - run:
          name: Install node dependencies
          command: npm ci

  clone_bichard_repo:
    description: Check out the bichard7-next repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - 07:76:0b:c1:80:51:7f:ec:3f:c8:7d:1c:91:d4:60:f5
      - run:
          name: Clone Bichard7 Next
          command: git clone --depth 1 git@github.com:ministryofjustice/bichard7-next.git ~/bichard7-next

  run_postgres_database:
    description: Spin up the postgres database
    steps:
      - run:
          name: Spin up PostgreSQL database
          working_directory: ~/bichard7-next
          command: make run-pg

  fetch_docker_images:
    description: Fetch all of the required docker images from ECR
    steps:
      - run:
          name: Fetch the BeanConnect image
          working_directory: ~/bichard7-next
          command: bash scripts/fetch_beanconnect_docker.sh
      - run:
          name: Fetch the E2E tests image
          working_directory: ~/bichard7-next
          command: bash scripts/fetch_e2etests_docker.sh
      - run:
          name: Fetch the Nginx Auth Proxy image
          working_directory: ~/bichard7-next
          command: bash scripts/fetch_nginx_auth_proxy_docker.sh
      - run:
          name: Fetch the PNC Emulator image
          working_directory: ~/bichard7-next
          command: bash scripts/fetch_pncemulator_docker.sh

jobs:
  build:
    docker:
      - image: cimg/node:16.3.0
    working_directory: ~
    steps:
      - checkout_and_install
      - save_cache:
          name: Save node_modules cache
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths: node_modules
      - run:
          name: Check the code for linting errors
          command: npm run lint
      - run:
          name: Build the user service application
          command: npm run build
      - persist_to_workspace:
          root: .
          paths: .next

  unit_test:
    docker:
      - image: cimg/node:16.3.0
    working_directory: ~
    steps:
      - checkout_and_install
      - attach_workspace:
          at: .
      - run:
          name: Run unit tests
          command: npm run test:unit

  integration_test:
    machine:
      image: ubuntu-2004:202104-01
      docker_layer_caching: true
    working_directory: ~
    steps:
      - checkout_and_install
      - attach_workspace:
          at: .
      - clone_bichard_repo
      - run_postgres_database
      - run:
          name: Run integration tests
          command: npm run test:integration

  ui_test:
    machine:
      image: ubuntu-2004:202104-01
      docker_layer_caching: true
    resource_class: large
    working_directory: ~
    parallelism: 4
    steps:
      - checkout
      - run: touch cypress.log
      - run:
          name: Install Cypress in the background
          command: ./.circleci/scripts/install-cypress.sh > cypress.log 2>&1 &
      - restore_cache:
          name: Load node_modules from the cache if they haven't changed
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            - v1-npm-deps-
      - run:
          name: Install node dependencies
          command: npm ci
      - attach_workspace:
          at: .
      - clone_bichard_repo
      - run_postgres_database
      - run:
          name: Wait for Cypress
          command: cat cypress.log; until [ -f cypressInstalled ]; do sleep 1; done
      - run:
          name: Run UI tests
          command: npm run test:ui
      - store_artifacts:
          path: ./cypress/videos
      - store_artifacts:
          path: ./cypress/screenshots

  e2e_test:
    machine:
      image: ubuntu-2004:202104-01
      docker_layer_caching: true
    working_directory: ~
    steps:
      - checkout_and_install
      - attach_workspace:
          at: .
      - run:
          name: Build user-service docker image
          command: make build
      - clone_bichard_repo
      - fetch_docker_images
      - run:
          name: Run full stack
          working_directory: ~/bichard7-next
          command: make run-all
      - run:
          name: Wait for Bichard
          working_directory: ~/bichard7-next
          command: bash ./scripts/wait_for_bichard.sh
      - run:
          name: Run end-to-end tests
          working_directory: ~/bichard7-next
          command: bash -c ". ./scripts/e2e-tests/e2e-tests-env.sh && docker-compose run e2e-tests npm run test:must"
          environment:
            STACK_TYPE: next
            WORKSPACE: local-next
            AUTH_TYPE: user-service

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - unit_test:
          requires:
            - build
      - integration_test:
          requires:
            - build
      - ui_test:
          requires:
            - build
      - e2e_test:
          requires:
            - build
